# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.37.0"
before_all do
  # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
end

desc "Runs all tests for the given environment"
desc "Set `scan` action environment variables to control test configuration"
desc "####Example:"
desc "```\nfastlane test_framework configuration:Debug --env ios91\n```"
desc "####Options"
desc " * **`configuration`**: The build configuration to use."
desc ""
lane :test_framework do |options|
  scan(
    configuration: options[:configuration]
  )
  
end

desc "Produces code coverage information"
desc "Set `scan` action environment variables to control test configuration"
desc "####Example:"
desc "```\nfastlane code_coverage configuration:Debug\n```"
desc "####Options"
desc " * **`configuration`**: The build configuration to use. The only supported configuration is the `Debug` configuration."
desc ""
lane :code_coverage do |options|
  if options[:configuration] != "Debug"
    Helper.log.info "Not running code coverage lane for #{options[:configuration]} configuration".yellow
  else
    scan(
      configuration: options[:configuration],
      xcargs: "OBJROOT=build GCC_GENERATE_TEST_COVERAGE_FILES=YES GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES"
    )
  end
end